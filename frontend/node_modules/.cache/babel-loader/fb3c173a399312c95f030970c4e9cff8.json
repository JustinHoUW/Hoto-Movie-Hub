{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Hoto-Movie-Hub\\\\frontend\\\\src\\\\Pages\\\\Genre.jsx\";\nimport React, { useState } from 'react'; // Removed useEffect because it's not being used\nimport axios from 'axios';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"../Components/Navbar\";\nconst GenrePage = () => {\n  const [genres, setMovies] = useState([]);\n  const handleGenre = async event => {\n    event.preventDefault(); // Prevent the default form submission behavior\n    try {\n      // Make a POST request to the backend API\n      const response = await axios.post('http://localhost:3001/Genre/${genre}', {\n        searchGenre: genres\n      });\n      console.log(response.data); // Log the response data received from the server\n      setMovies(response.data); // Update the search results state with the data received\n    } catch (error) {\n      console.error(\"Error searching for movie genre:\", error); // Log any errors that occur during the request\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  });\n};\nexport default GenrePage;","map":{"version":3,"names":["React","useState","axios","BrowserRouter","Router","Switch","Route","Navbar","GenrePage","genres","setMovies","handleGenre","event","preventDefault","response","post","searchGenre","console","log","data","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/xampp/htdocs/Hoto-Movie-Hub/frontend/src/Pages/Genre.jsx"],"sourcesContent":["import React, { useState } from 'react'; // Removed useEffect because it's not being used\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"; \r\nimport Navbar from \"../Components/Navbar\"; \r\n\r\n\r\nconst GenrePage = () => {\r\n\r\n    const [genres, setMovies] = useState([]);\r\n  \r\n    const handleGenre = async (event) => {\r\n      event.preventDefault(); // Prevent the default form submission behavior\r\n      try {\r\n        // Make a POST request to the backend API\r\n        const response = await axios.post('http://localhost:3001/Genre/${genre}', {\r\n          searchGenre: genres\r\n        });\r\n        console.log(response.data); // Log the response data received from the server\r\n        setMovies(response.data); // Update the search results state with the data received\r\n      } catch (error) {\r\n        console.error(\"Error searching for movie genre:\", error); // Log any errors that occur during the request\r\n      }\r\n    }\r\n\r\n\r\n\r\n  return (\r\n      <div>\r\n\r\n      </div>\r\n        );\r\n};\r\n\r\nexport default GenrePage\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,sBAAsB;AAGzC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAEpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACxB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,sCAAsC,EAAE;QACxEC,WAAW,EAAEP;MACf,CAAC,CAAC;MACFQ,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;MAC5BT,SAAS,CAACI,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC,CAAC,CAAC;IAC5D;EACF,CAAC;EAIH,oBACIpB,KAAA,CAAAqB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAEK,CAAC;AAEZ,CAAC;AAED,eAAenB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}