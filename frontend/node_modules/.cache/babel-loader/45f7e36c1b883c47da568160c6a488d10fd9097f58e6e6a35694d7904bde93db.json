{"ast":null,"code":"function validation(values) {\n  let error = {};\n\n  // Check constraints for valid email and at least two characters for password, first name, and last name\n  const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const passwordPattern = /^(?=.*[A-Z]).{2,}$/;\n  const namePattern = /^.+$/;\n  if (values.email === \"\") {\n    error.email = \"Email should not be empty\";\n  } else if (!emailPattern.test(values.email)) {\n    error.email = \"Email format is invalid\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"Password should not be empty\";\n  } else if (!passwordPattern.test(values.password)) {\n    error.password = \"Password must be at least two characters long\";\n  } else {\n    error.password = \"\";\n  }\n  if (values.name === \"\") {\n    error.name = \"Name should not be empty\";\n  } else if (!namePattern.test(values.name)) {\n    error.name = \"Name format is invalid\";\n  } else {\n    error.name = \"\";\n  }\n  return error;\n}\nexport default validation;","map":{"version":3,"names":["validation","values","error","emailPattern","passwordPattern","namePattern","email","test","password","name"],"sources":["C:/xampp/htdocs/Hoto-Movie-Hub/Frontend/src/Components/SignUpValidation.jsx"],"sourcesContent":["function validation(values)  {\r\n    let error = {}\r\n\r\n    // Check constraints for valid email and at least two characters for password, first name, and last name\r\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const passwordPattern = /^(?=.*[A-Z]).{2,}$/;\r\n    const namePattern = /^.+$/;\r\n\r\n    if (values.email === \"\") {\r\n        error.email = \"Email should not be empty\";\r\n    }\r\n    else if (!emailPattern.test(values.email)) {\r\n        error.email = \"Email format is invalid\";\r\n    } else {\r\n        error.email = \"\";\r\n    }\r\n\r\n    if (values.password === \"\") {\r\n        error.password = \"Password should not be empty\";\r\n    }\r\n    else if (!passwordPattern.test(values.password)) {\r\n        error.password = \"Password must be at least two characters long\";\r\n    } else {\r\n        error.password = \"\";\r\n    }\r\n\r\n    if (values.name === \"\") {\r\n        error.name = \"Name should not be empty\";\r\n    }\r\n    else if (!namePattern.test(values.name)) {\r\n        error.name  = \"Name format is invalid\";\r\n    } else {\r\n        error.name = \"\";\r\n    }\r\n\r\n\r\n    return error;\r\n}\r\n\r\nexport default validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAG;EACzB,IAAIC,KAAK,GAAG,CAAC,CAAC;;EAEd;EACA,MAAMC,YAAY,GAAG,4BAA4B;EACjD,MAAMC,eAAe,GAAG,oBAAoB;EAC5C,MAAMC,WAAW,GAAG,MAAM;EAE1B,IAAIJ,MAAM,CAACK,KAAK,KAAK,EAAE,EAAE;IACrBJ,KAAK,CAACI,KAAK,GAAG,2BAA2B;EAC7C,CAAC,MACI,IAAI,CAACH,YAAY,CAACI,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC,EAAE;IACvCJ,KAAK,CAACI,KAAK,GAAG,yBAAyB;EAC3C,CAAC,MAAM;IACHJ,KAAK,CAACI,KAAK,GAAG,EAAE;EACpB;EAEA,IAAIL,MAAM,CAACO,QAAQ,KAAK,EAAE,EAAE;IACxBN,KAAK,CAACM,QAAQ,GAAG,8BAA8B;EACnD,CAAC,MACI,IAAI,CAACJ,eAAe,CAACG,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,EAAE;IAC7CN,KAAK,CAACM,QAAQ,GAAG,+CAA+C;EACpE,CAAC,MAAM;IACHN,KAAK,CAACM,QAAQ,GAAG,EAAE;EACvB;EAEA,IAAIP,MAAM,CAACQ,IAAI,KAAK,EAAE,EAAE;IACpBP,KAAK,CAACO,IAAI,GAAG,0BAA0B;EAC3C,CAAC,MACI,IAAI,CAACJ,WAAW,CAACE,IAAI,CAACN,MAAM,CAACQ,IAAI,CAAC,EAAE;IACrCP,KAAK,CAACO,IAAI,GAAI,wBAAwB;EAC1C,CAAC,MAAM;IACHP,KAAK,CAACO,IAAI,GAAG,EAAE;EACnB;EAGA,OAAOP,KAAK;AAChB;AAEA,eAAeF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}